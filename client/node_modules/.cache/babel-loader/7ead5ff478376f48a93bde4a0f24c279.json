{"ast":null,"code":"var _jsxFileName = \"D:\\\\StartUp\\\\infinity-app\\\\client\\\\src\\\\pages\\\\insertCust.jsx\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport { connect } from 'react-redux';\nimport api from '../api';\n\nconst useStyles = theme => ({\n  layout: {\n    width: 'auto',\n    marginTop: theme.spacing(2),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3)\n    }\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar\n  }\n});\n\nfunction mapStateToProps(state) {\n  console.log(state);\n  const {\n    orgStates\n  } = state;\n  const {\n    orgid,\n    content\n  } = orgStates;\n  return {\n    orgid: orgid,\n    content: content\n  };\n}\n\nclass insertCust extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      let pairs = this.props.content.split(\"-\");\n      let status = 0;\n      let _id = \"\";\n\n      if (pairs.length === 2) {\n        _id = pairs[0];\n        status = pairs[1];\n      }\n\n      if (status === 1) {\n        await api.getCustByOrgId(_id).then(res => {\n          this.setState({\n            customer: res.data.data\n          });\n        });\n      }\n    };\n\n    this.saveCustomer = saveid => {\n      console.log(\"Event\" + saveid);\n    };\n\n    this.getSteps = () => {\n      return ['New', 'Pending', 'Active'];\n    };\n\n    this.state = {\n      customer: []\n    };\n  }\n\n  render(props) {\n    const {\n      classes\n    } = this.props;\n    const steps = this.getSteps();\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"main\", {\n      className: classes.layout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.toolbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Stepper, {\n      activeStep: this.state.status,\n      alternativeLabel: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, steps.map(label => /*#__PURE__*/React.createElement(Step, {\n      key: label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(StepLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 37\n      }\n    }, label)))), /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"company\",\n      name: \"Company\",\n      label: \"Company\",\n      fullWidth: true,\n      autoComplete: \"company-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"cname\",\n      name: \"cname\",\n      label: \"Contact Name\",\n      fullWidth: true,\n      autoComplete: \"given-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"email\",\n      name: \"email\",\n      label: \"Contact Email\",\n      fullWidth: true,\n      autoComplete: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"address1\",\n      name: \"address1\",\n      label: \"Address line 1\",\n      fullWidth: true,\n      autoComplete: \"shipping address-line1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"address2\",\n      name: \"address2\",\n      label: \"Address line 2\",\n      fullWidth: true,\n      autoComplete: \"shipping address-line2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"city\",\n      name: \"city\",\n      label: \"City\",\n      fullWidth: true,\n      autoComplete: \"shipping address-level2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"state\",\n      name: \"state\",\n      label: \"State/Province/Region\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"zip\",\n      name: \"zip\",\n      label: \"Zip / Postal code\",\n      fullWidth: true,\n      autoComplete: \"shipping postal-code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"country\",\n      name: \"country\",\n      label: \"Country\",\n      fullWidth: true,\n      autoComplete: \"shipping country\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"instruct\",\n      name: \"instruct\",\n      label: \"Instructions\",\n      fullWidth: true,\n      autoComplete: \"instruct\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => this.saveCustomer(\"4565uoi\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 37\n      }\n    }, \"Save\")))))));\n  }\n\n}\n\nexport default connect(mapStateToProps)(withStyles(useStyles)(insertCust));","map":{"version":3,"sources":["D:/StartUp/infinity-app/client/src/pages/insertCust.jsx"],"names":["React","withStyles","Grid","TextField","Button","Paper","Stepper","Step","StepLabel","connect","api","useStyles","theme","layout","width","marginTop","spacing","marginLeft","marginRight","breakpoints","up","paper","marginBottom","padding","toolbar","display","alignItems","justifyContent","mixins","mapStateToProps","state","console","log","orgStates","orgid","content","insertCust","Component","constructor","props","componentDidMount","pairs","split","status","_id","length","getCustByOrgId","then","res","setState","customer","data","saveCustomer","saveid","getSteps","render","classes","steps","map","label"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport { connect } from 'react-redux';\r\nimport api from '../api';\r\n\r\nconst useStyles = theme => ({\r\n    layout: {\r\n        width: 'auto',\r\n        marginTop: theme.spacing(2),\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n            width: 600,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n});\r\n\r\nfunction mapStateToProps(state) {\r\n    console.log(state);\r\n    const { orgStates } = state;\r\n    const { orgid, content } = orgStates;\r\n    return{\r\n        orgid:orgid,\r\n        content:content,\r\n    }\r\n}\r\n\r\n\r\nclass insertCust extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            customer:[],\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        let pairs = this.props.content.split(\"-\");\r\n        let status = 0;\r\n        let _id = \"\";\r\n        \r\n        if(pairs.length===2){\r\n            _id=pairs[0];\r\n            status = pairs[1];\r\n        }\r\n        if(status===1){\r\n            await api.getCustByOrgId(_id).then(res => {\r\n                this.setState({\r\n                    customer: res.data.data,\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    saveCustomer = (saveid) =>{\r\n        console.log(\"Event\" + saveid);\r\n    }\r\n\r\n    getSteps = () =>{\r\n        return ['New', 'Pending', 'Active'];\r\n    }\r\n\r\n    render(props) {\r\n        const { classes } = this.props;\r\n        const steps = this.getSteps();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <main className={classes.layout}>\r\n                    <div className={classes.toolbar} />\r\n                    <Paper className={classes.paper}>\r\n                        <Stepper activeStep={this.state.status} alternativeLabel>\r\n                            {steps.map((label) => (\r\n                                <Step key={label}>\r\n                                    <StepLabel>{label}</StepLabel>\r\n                                </Step>\r\n                            ))}\r\n                        </Stepper>\r\n                        <React.Fragment>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"company\"\r\n                                    name=\"Company\"\r\n                                    label=\"Company\"\r\n                                    fullWidth\r\n                                    autoComplete=\"company-name\"\r\n                                />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"cname\"\r\n                                    name=\"cname\"\r\n                                    label=\"Contact Name\"\r\n                                    fullWidth\r\n                                    autoComplete=\"given-name\"\r\n                                />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    label=\"Contact Email\"\r\n                                    fullWidth\r\n                                    autoComplete=\"email\"\r\n                                />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"address1\"\r\n                                    name=\"address1\"\r\n                                    label=\"Address line 1\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping address-line1\"\r\n                                />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                <TextField\r\n                                    id=\"address2\"\r\n                                    name=\"address2\"\r\n                                    label=\"Address line 2\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping address-line2\"\r\n                                />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"city\"\r\n                                    name=\"city\"\r\n                                    label=\"City\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping address-level2\"\r\n                                />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"zip\"\r\n                                    name=\"zip\"\r\n                                    label=\"Zip / Postal code\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping postal-code\"\r\n                                />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"country\"\r\n                                    name=\"country\"\r\n                                    label=\"Country\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping country\"\r\n                                />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                <TextField\r\n                                    id=\"instruct\"\r\n                                    name=\"instruct\"\r\n                                    label=\"Instructions\"\r\n                                    fullWidth\r\n                                    autoComplete=\"instruct\"\r\n                                />\r\n                                </Grid>\r\n                                <Grid item xs={12}\r\n                                    container\r\n                                    direction=\"row\"\r\n                                    justify=\"center\"\r\n                                    alignItems=\"center\">\r\n                                    <Button variant=\"contained\"  color=\"primary\" onClick={() => this.saveCustomer(\"4565uoi\")}>Save</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                            </React.Fragment>\r\n                            \r\n                    </Paper>\r\n                </main>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withStyles(useStyles)(insertCust));"]},"metadata":{},"sourceType":"module"}